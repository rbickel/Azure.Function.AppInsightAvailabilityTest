# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-2019'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build and publish .netcore function'
  inputs:
    command: 'build'
    projects: 'FunctionAvailabilityTests'
    arguments: '-c Release --output $(Build.BinariesDirectory)/publish'
- task: ArchiveFiles@2
  displayName: 'Archive .netcore function'
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
# Copy Files
# Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    #sourceFolder: # Optional
    contents: |
     azuredeploy.json
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true # Optional
    overWrite: true # Optional
    #flattenFolders: false # Optional
- task: PublishBuildArtifacts@1
  displayName: 'Publish $(Build.ArtifactStagingDirectory)'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop' 
- task: AzureFileCopy@3
  displayName: 'Publish to public blob storage'
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    azureSubscription: 'rabickel Internal Subscription (6ff9e090-f045-45ba-adec-183d64c01b9b)'
    Destination: 'AzureBlob'
    storage: 'rabickelartifacts'
    ContainerName: 'public'
    BlobPrefix: 'functions/'
    outputStorageUri: 'storagecontaineruri'
    outputStorageContainerSasToken: 'storagecontainersastoken'