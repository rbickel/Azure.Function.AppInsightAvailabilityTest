# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'FunctionAvailabilityTests'
    arguments: '-c Release --output $(Build.ArtifactStagingDirectory)/publish'
# Copy Files
# Copy files from source folder to target folder using match patterns (The match patterns will only match file paths, not folder paths)
- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    #sourceFolder: # Optional
    contents: |
     azuredeploy.json
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true # Optional
    overWrite: true # Optional
    #flattenFolders: false # Optional
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop' 
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/publish/**/.zip' 
    artifactName: 'drop' 