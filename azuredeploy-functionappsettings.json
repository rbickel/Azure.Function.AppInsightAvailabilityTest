{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "endpointUri": {
      "type": "string",
      "defaultValue": "https://www.bing.com",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": ["Standard_LRS", "Standard_GRS", "Standard_RAGRS"],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West Europe",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "functionPackage": {
      "type": "string",
      "defaultValue": "https://github.com/rbickel/Azure.Function.AppInsightAvailabilityTest/raw/master/webdeploy/FunctionAvailabilityTests%20-%202019051414422337.zip",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    }
  },
  "variables": {
    "functionAppName": "[concat(parameters('appName'), '-app')]",
    "hostingPlanName": "[concat(parameters('appName'), '-plan')]",
    "applicationInsightsName": "[concat(parameters('appName'), '-insights')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "functionWorkerRuntime": "dotnet",
    "runFromZIP": "[parameters('functionPackage')]"
  },
  "resources": [
    {
        "apiVersion": "2015-08-01",
        "name": "appsettings",
        "type": "config",
        "dependsOn": [
            "[resourceId(subscription().subscriptionId, resourceGroup().name, 'Microsoft.Web/Sites', variables('functionAppName'))]"
        ],
        "properties": {
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "FUNCTIONS_WORKER_RUNTIME":"[variables('functionWorkerRuntime')]",
            "FUNCTIONS_EXTENSION_VERSION": "~2",
            "WEBSITE_CONTENTSHARE":"[toLower(variables('functionAppName'))]",
            "AzureWebJobsSecretStorageType":"files",
            "APPINSIGHTS_INSTRUMENTATIONKEY":"[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
            "WEBSITE_RUN_FROM_ZIP": "[variables('runFromZIP')]",
            "AppInsights:instrumentationKey":"[reference(resourceId('microsoft.insights/components/', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
            "AppInsights:region":"[parameters('location')]",
            "Endpoint":"[listsecrets(resourceId('Microsoft.Web/sites/functions', variables('functionAppName'), 'Ping'),'2015-08-01').trigger_url]"
        }
    }
  ],
  "outputs": {
        "PingUri":{
            "type":"string",
            "value":"[listsecrets(resourceId('Microsoft.Web/sites/functions', variables('functionAppName'), 'Ping'),'2015-08-01').trigger_url]"
        }
   }
}
